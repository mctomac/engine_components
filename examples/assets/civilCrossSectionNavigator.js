var L=Object.defineProperty;var R=(t,o,e)=>o in t?L(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e;var d=(t,o,e)=>(R(t,typeof o!="symbol"?o+"":o,e),e);import{V as y,C as T,L as I}from"./web-ifc-api-BC8YMRiS.js";import{J as F,m as U,f as V,p as W,s as _,n as j,N as H,u as Z,R as z}from"./index-BmA4XTIx.js";import{p as G}from"./index-DyM33b1I.js";import{Z as J,C as Y}from"./index-C5Kx38b6.js";import{S as $}from"./stats.min-GTpOrGrX.js";import{C as q}from"./index-Bmso1r6C.js";import{R as K}from"./renderer-with-2d-k8_K2aYf.js";import{E as O,C as Q}from"./index-G1IrRYgc.js";import"./import-wrapper-prod-LhqN7JJy.js";import"./Line2-7GsqoD5b.js";import"./mark--YNYmWZ2.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-B5B6dldk.js";import"./index-DKqERfnq.js";const g=class g extends F{constructor(e){super(e);d(this,"world",null);d(this,"enabled",!0);d(this,"plane");d(this,"_world3D",null);this.components.add(g.uuid,this)}get world3D(){return this._world3D}set world3D(e){var i;if(this._world3D=e,(i=this.plane)==null||i.dispose(),!e)return;const n=this.components.get(U),a=n.Type;n.Type=O,this.plane=n.createFromNormalAndCoplanarPoint(e,new y(1,0,0),new y),n.Type=a,this.plane.visible=!1,this.plane.enabled=!1}async set(e,n){if(!this.world||!this.plane)throw new Error("You must set a world before using this component");this.plane.enabled=!0;const a=e.curve.getPercentageAt(n);if(a===null)return;const{startPoint:i,endPoint:S}=e.curve.getSegmentAt(a);if(e.geometry.index===null)throw new Error("Geometry must be indexed!");const w=new y;w.subVectors(S,i),w.normalize(),this.plane.setFromNormalAndCoplanarPoint(w,n),this.plane.edges.update();const x=this.plane.helper.matrix.clone();x.invert();const A=this.world.scene.three,M=this.plane.edges.get();for(const k in M){const{mesh:l}=M[k];l.position.set(0,0,0),l.rotation.set(0,0,0),l.updateMatrix(),l.applyMatrix4(x),l.parent!==A&&A.add(l)}this.plane.enabled=!1}};d(g,"uuid","96b2c87e-d90b-4639-8257-8f01136fe324");let b=g;G.init();J.init();const B=document.getElementById("container"),r=new V,X=r.get(W),s=X.create();s.scene=new _(r);s.renderer=new K(r,B);s.camera=new j(r);r.init();s.scene.setup();s.camera.controls.setLookAt(5,5,5,0,0,0);B.appendChild(s.renderer.three2D.domElement);const ee=r.get(H);ee.create(s);const N=r.get(Z),te=await fetch("https://thatopen.github.io/engine_components/resources/road.frag"),oe=await te.arrayBuffer(),ne=new Uint8Array(oe),m=N.load(ne);s.scene.three.add(m);const re=await fetch("https://thatopen.github.io/engine_components/resources/road.json");m.setLocalProperties(await re.json());const D=document.getElementById("scene-2d-left");D.components=r;if(!D.world)throw new Error("World not found!");const c=new q(r);c.world=D.world;await c.draw(m);const p=new Y(r);p.world=s;p.draw(m);p.highlighter.hoverCurve.material.color.set(1,1,1);const{material:f}=c.highlighter.hoverPoints;if(Array.isArray(f)){const t=f[0];"color"in t&&t.color.set(1,1,1)}else"color"in f&&f.color.set(1,1,1);c.onHighlight.add(({mesh:t})=>{p.highlighter.select(t);const o=t.curve.index,e=t.curve.alignment.absolute[o];e.mesh.geometry.computeBoundingSphere();const n=e.mesh.geometry.boundingSphere;n&&s.camera.controls.fitToSphere(n,!0)});const u=document.getElementById("scene-2d-right");u.components=r;if(!u.world)throw new Error("World not found!");const v=new b(r);v.world=u.world;v.world3D=s;c.onMarkerChange.add(({alignment:t,percentage:o,type:e,curve:n})=>{if(p.setMarker(t,o,e),e==="select"){const a=n.alignment.absolute[n.index].mesh,i=t.getPointAt(o,"absolute");v.set(a,i)}});c.onMarkerHidden.add(({type:t})=>{p.hideMarker(t)});const E=new z(r);E.byEntity(m);const se=E.list,P=r.get(Q),C=P.styles.list;for(const t in se.entities){const o=E.find({entities:[t]}),e=new T(Math.random(),Math.random(),Math.random()),n=new I({color:e});P.styles.create(t,new Set,u.world,n);for(const a in o){const i=N.list.get(a);i&&(C[t].fragments[a]=new Set(o[a]),C[t].meshes.add(i.mesh))}}P.update(!0);const h=new $;h.showPanel(2);document.body.append(h.dom);h.dom.style.left="0px";s.renderer.onBeforeUpdate.add(()=>h.begin());s.renderer.onAfterUpdate.add(()=>h.end());
